'use strict'

//1
/*Напишите скрипт который реализует следующий функционал.
  Есть кнопка с классом button, текст которой отображает кол-во раз которое по ней кликнули, 
  обновляется при каждом клике.
*/
function showClick(){
  
}
let a = document.querySelector('.button_1');

user.showName();
a.addEventListener('click', user.showName.bind(user));

//2
/* Даны 2 инпута, абзац и кнопка. По нажатию на кнопку 
  получите числа которые бьудут введены в инпуты и запишите их сумму в span.result.
*/

//3
/*Есть счетчик (спан) и кнопки +1, -1, которые должны увеличивать и уменьшать значение счетчика на 1. 
  - Создайте класс Counter, который хранит одно поле value - текущее значение счетчика
  - Класс принимает один параметр - onChange, функцию для обновления интерфейса при изменении счетчика
  - Добавьте классу методы increment и decrement для увеличения и уменьшения значения счетчика
  - Привяжите вызовы методов и значение счетчика к раметке
*/


class Counter {
  constructor(onChange){
    this.value = 0;
    this.onChange = onChange;
  }
  increment(){
    this.value++;
    this.onChange(this.value);
  }
  decrement(){
    this.value--;
    this.onChange(this.value);
  }
}

function onChange(value){
  console.log(value);
  result.textContent = value;
}

let counter = new counter(onChange)

console.log(counter);

sub.addEventListener('click', counter.decrement.bind(counter));
add.addEventListener('click', counter.increment.bind(counter));

//4
/*Есть форма с набором радиокнопок. Пользователь выбирает вариант ответа, 
  после чего нажимает кнопку "Submit" и происходит отправка формы.
  При отправке формы:
    - не должна перезагружаться страница
    - необходимо получить выбранную опцию и вывести в параграф с классом .result
*/

//5
/*Дан список изображений. Сделайте так, чтобы по клику на картинку 
  алертом выводился ее src. Обязательно используйте делегирование событий.
*/

//6
/*Дан ul, а внутри него произвольное количество li с текстом и кнопкой. 
  Сделайте так, чтобы по нажатию на кнопку, удалялся тот li в котором
  она находится. Обязательно используйте делегирование событий.
*/

//7
/*Дан набор инпутов. Сделайте так, чтобы при потере фокуса все 
  инпуты проверяли свое содержимое на правильное количество символов. 
  - Сколько символов должно быть в инпуте, указывается в атрибуте data-length. 
  - Если введено подходящее количество, то outline инпута становится зеленым, 
    если неправильное - красным. Для добавления стилей, на вкладке CSS есть стили valid и invalid
*/

//8
/*Напишите скрипт который:
    - При фокусе текстового поля, в p.message рендерит строку "Input is in focus!"
    - При наборе текста в инпуте (событие input), текущее его значение должно 
      отображаться в p.input-value 
*/

//9
/*На вкладках HTML и CSS уже готовая верстка модального окна.
  По умолчанию модальное окно скрыто классом modal-hidden.
  Напишите скрипт который реализует следующее поведение:
  - При клике на кнопке с надписью "Open Modal", модальное окно с классом modal, 
    должно появляться. Для этого необходимо убрать класс modal-hidden. 
    Для выбора модального модального окна используйте класс js-modal-backdrop
  - При открытом модальном окне, клик на кнопку с крестиком (data-action="close-modal")
    или на серый фон с прозрачностью (js-modal-backdrop), модальное окно должно закрываться.
*/

//10
/*Ознакомьтесь с HTML и CSS.
  Есть меню навигации, необходимо написать скрипт, который
  при клике на пункт меню добавит ему класс active,
  таким образом выделив текущую (активную) ссылку,
  при этом убрав его у всех остальных элементов меню.
  Пунктов меню может быть произвольное количество, используйте
  прием делегирование событий. Учтите клик по самому ul, его
  необходимо игнорировать.
  При клике по ссылкам не должна перезагружаться страница!
*/
